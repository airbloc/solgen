// Auto Generated. But feel free to EDIT!
syntax = "proto3";
package airbloc.simpleToken;

import "google/protobuf/empty.proto";

// SimpleToken
service SimpleToken {
	rpc totalSupply(google.protobuf.Empty) returns (ResponseTotalSupply);
	rpc increaseAllowance(RequestIncreaseAllowance) returns (ResponseIncreaseAllowance);
	rpc mint(RequestMint) returns (ResponseMint);
	rpc addMinter(RequestAddMinter) returns (google.protobuf.Empty);
	rpc transfer(RequestTransfer) returns (ResponseTransfer);
	rpc isMinter(RequestIsMinter) returns (ResponseIsMinter);
	rpc allowance(RequestAllowance) returns (ResponseAllowance);
	rpc approve(RequestApprove) returns (ResponseApprove);
	rpc transferFrom(RequestTransferFrom) returns (ResponseTransferFrom);
	rpc balanceOf(RequestBalanceOf) returns (ResponseBalanceOf);
	rpc renounceMinter(google.protobuf.Empty) returns (google.protobuf.Empty);
	rpc decreaseAllowance(RequestDecreaseAllowance) returns (ResponseDecreaseAllowance);
}


// totalSupply()
message ResponseTotalSupply {
	string ptr1 = 1;
}

// increaseAllowance(address,uint256)
message RequestIncreaseAllowance {
	string spender = 1;
	string addedValue = 2;
}

// increaseAllowance(address,uint256)
message ResponseIncreaseAllowance {
	bool bool1 = 1;
}

// mint(address,uint256)
message RequestMint {
	string account = 1;
	string amount = 2;
}

// mint(address,uint256)
message ResponseMint {
	bool bool1 = 1;
}

// addMinter(address)
message RequestAddMinter {
	string account = 1;
}

// transfer(address,uint256)
message RequestTransfer {
	string recipient = 1;
	string amount = 2;
}

// transfer(address,uint256)
message ResponseTransfer {
	bool bool1 = 1;
}

// isMinter(address)
message RequestIsMinter {
	string account = 1;
}

// isMinter(address)
message ResponseIsMinter {
	bool bool1 = 1;
}

// allowance(address,address)
message RequestAllowance {
	string owner = 1;
	string spender = 2;
}

// allowance(address,address)
message ResponseAllowance {
	string ptr1 = 1;
}

// approve(address,uint256)
message RequestApprove {
	string spender = 1;
	string value = 2;
}

// approve(address,uint256)
message ResponseApprove {
	bool bool1 = 1;
}

// transferFrom(address,address,uint256)
message RequestTransferFrom {
	string sender = 1;
	string recipient = 2;
	string amount = 3;
}

// transferFrom(address,address,uint256)
message ResponseTransferFrom {
	bool bool1 = 1;
}

// balanceOf(address)
message RequestBalanceOf {
	string account = 1;
}

// balanceOf(address)
message ResponseBalanceOf {
	string ptr1 = 1;
}

// decreaseAllowance(address,uint256)
message RequestDecreaseAllowance {
	string spender = 1;
	string subtractedValue = 2;
}

// decreaseAllowance(address,uint256)
message ResponseDecreaseAllowance {
	bool bool1 = 1;
}


