// Auto Generated. But feel free to EDIT!
syntax = "proto3";
package airbloc.exchange;

import "google/protobuf/empty.proto";

// Exchange
service Exchange {
	rpc order(RequestOrder) returns (google.protobuf.Empty);
	rpc settle(RequestSettle) returns (google.protobuf.Empty);
	rpc reject(RequestReject) returns (google.protobuf.Empty);
	rpc getOffer(RequestGetOffer) returns (ResponseGetOffer);
	rpc prepare(RequestPrepare) returns (ResponsePrepare);
	rpc addDataIds(RequestAddDataIds) returns (google.protobuf.Empty);
	rpc cancel(RequestCancel) returns (google.protobuf.Empty);
	rpc offerExists(RequestOfferExists) returns (ResponseOfferExists);
	rpc getOfferMembers(RequestGetOfferMembers) returns (ResponseGetOfferMembers);
}


// order(bytes8)
message RequestOrder {
	string offerId = 1;
}

// settle(bytes8)
message RequestSettle {
	string offerId = 1;
}

// reject(bytes8)
message RequestReject {
	string offerId = 1;
}

// getOffer(bytes8)
message RequestGetOffer {
	string offerId = 1;
}

// getOffer(bytes8)
message ResponseGetOffer {
	// struct { Provider string &#34;json:\&#34;provider\&#34;&#34;; Consumer common.Address &#34;json:\&#34;consumer\&#34;&#34;; DataIds [][20]uint8 &#34;json:\&#34;dataIds\&#34;&#34;; At *big.Int &#34;json:\&#34;at\&#34;&#34;; Until *big.Int &#34;json:\&#34;until\&#34;&#34;; Escrow struct { Addr common.Address &#34;json:\&#34;addr\&#34;&#34;; Sign [4]uint8 &#34;json:\&#34;sign\&#34;&#34;; Args []uint8 &#34;json:\&#34;args\&#34;&#34; } &#34;json:\&#34;escrow\&#34;&#34;; Status uint8 &#34;json:\&#34;status\&#34;&#34; }
	message XYX__tmpStruct1 {
		// struct { Addr common.Address &#34;json:\&#34;addr\&#34;&#34;; Sign [4]uint8 &#34;json:\&#34;sign\&#34;&#34;; Args []uint8 &#34;json:\&#34;args\&#34;&#34; }
		message XYX__tmpStruct6 {
			string addr = 1;
			string sign = 2;
			string args = 3;
		}
		string provider = 1;
		string consumer = 2;
		repeated string dataIds = 3;
		string at = 4;
		string until = 5;
		XYX__tmpStruct6 escrow = 6;
		uint32 status = 7;
	}
	XYX__tmpStruct1 struct1 = 1;
}

// prepare(string,address,address,bytes4,bytes,bytes20[])
message RequestPrepare {
	string provider = 1;
	string consumer = 2;
	string escrow = 3;
	string escrowSign = 4;
	string escrowArgs = 5;
	repeated string dataIds = 6;
}

// prepare(string,address,address,bytes4,bytes,bytes20[])
message ResponsePrepare {
	string array1 = 1;
}

// addDataIds(bytes8,bytes20[])
message RequestAddDataIds {
	string offerId = 1;
	repeated string dataIds = 2;
}

// cancel(bytes8)
message RequestCancel {
	string offerId = 1;
}

// offerExists(bytes8)
message RequestOfferExists {
	string offerId = 1;
}

// offerExists(bytes8)
message ResponseOfferExists {
	bool bool1 = 1;
}

// getOfferMembers(bytes8)
message RequestGetOfferMembers {
	string offerId = 1;
}

// getOfferMembers(bytes8)
message ResponseGetOfferMembers {
	string array1 = 1;
	string array2 = 2;
}


