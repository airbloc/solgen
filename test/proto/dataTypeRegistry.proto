// Auto Generated. But feel free to EDIT!
syntax = "proto3";
package airbloc.dataTypeRegistry;

import "google/protobuf/empty.proto";

// DataTypeRegistry
service DataTypeRegistry {
	rpc get(RequestGet) returns (ResponseGet);
	rpc exists(RequestExists) returns (ResponseExists);
	rpc isOwner(RequestIsOwner) returns (ResponseIsOwner);
	rpc unregister(RequestUnregister) returns (google.protobuf.Empty);
	rpc register(RequestRegister) returns (google.protobuf.Empty);
}


// get(string)
message RequestGet {
	string name = 1;
}

// get(string)
message ResponseGet {
	// struct { Name string &#34;json:\&#34;name\&#34;&#34;; Owner common.Address &#34;json:\&#34;owner\&#34;&#34;; SchemaHash [32]uint8 &#34;json:\&#34;schemaHash\&#34;&#34; }
	message XYX__tmpStruct1 {
		string name = 1;
		string owner = 2;
		string schemaHash = 3;
	}
	XYX__tmpStruct1 struct1 = 1;
}

// exists(string)
message RequestExists {
	string name = 1;
}

// exists(string)
message ResponseExists {
	bool bool1 = 1;
}

// isOwner(string,address)
message RequestIsOwner {
	string name = 1;
	string owner = 2;
}

// isOwner(string,address)
message ResponseIsOwner {
	bool bool1 = 1;
}

// unregister(string)
message RequestUnregister {
	string name = 1;
}

// register(string,bytes32)
message RequestRegister {
	string name = 1;
	string schemaHash = 2;
}


