{{define "MethodCalls"}}{{$contract := .}}
{{range $method := .Calls}}
    // {{.Normalized.Name}} is a free data retrieval call binding the contract method 0x{{printf "%x" .Original.Id}}.
    //
    // Solidity: {{.Original.String}}
    func (_{{$contract.Type}} *{{$contract.Type}}Caller) {{.Normalized.Name}}(opts *bind.CallOpts, {{.InputArgs true}}) ({{.OutputArgs}}, error) {
        {{if .Structured}}ret := new({{.OutputArgs}})
        {{else}}var(
            {{range $i, $_ := .Normalized.Outputs}}ret{{$i}}{{if not (last $i $method.Normalized.Outputs)}},{{end}}{{end}} =
            {{range $i, $_ := .Normalized.Outputs}}new({{bindtype .Type $contract.TypeOption}}){{if not (last $i $method.Normalized.Outputs)}},{{end}}{{end}}
        ){{end}}
        out := {{if .Structured}}ret{{else}}&[]interface{}{ {{range $i, $_ := .Normalized.Outputs}}ret{{$i}},{{end}} }{{end}}
        err := _{{$contract.Type}}.contract.Call(opts, out, "{{.Original.Name}}", {{.InputArgs false}})
        return {{if .Structured}}*ret,{{else}}{{range $i, $_ := .Normalized.Outputs}}*ret{{$i}},{{end}}{{end}} err
    }

    // {{.Normalized.Name}} is a free data retrieval call binding the contract method 0x{{printf "%x" .Original.Id}}.
    //
    // Solidity: {{.Original.String}}
    func (_{{$contract.Type}} *{{$contract.Type}}Session) {{.Normalized.Name}}({{.InputArgs true}}) ({{.OutputArgs}}, error) {
        return _{{$contract.Type}}.Contract.{{.Normalized.Name}}(&_{{$contract.Type}}.CallOpts, {{.InputArgs false}})
    }

    // {{.Normalized.Name}} is a free data retrieval call binding the contract method 0x{{printf "%x" .Original.Id}}.
    //
    // Solidity: {{.Original.String}}
    func (_{{$contract.Type}} *{{$contract.Type}}CallerSession) {{.Normalized.Name}}({{.InputArgs true}}) ({{.OutputArgs}}, error) {
        return _{{$contract.Type}}.Contract.{{.Normalized.Name}}(&_{{$contract.Type}}.CallOpts, {{.InputArgs false}})
    }
{{end}}{{end}}

{{define "MethodTransacts"}}{{$contract := .}}
{{range .Transacts}}
    // {{.Normalized.Name}} is a paid mutator transaction binding the contract method 0x{{printf "%x" .Original.Id}}.
    //
    // Solidity: {{.Original.String}}
    func (_{{$contract.Type}} *{{$contract.Type}}Transactor) {{.Normalized.Name}}(opts *bind.TransactOpts, {{.InputArgs true}}) (*ethTypes.Transaction, error) {
        return _{{$contract.Type}}.contract.Transact(opts, "{{.Original.Name}}", {{.InputArgs false}})
    }

    // {{.Normalized.Name}} is a paid mutator transaction binding the contract method 0x{{printf "%x" .Original.Id}}.
    //
    // Solidity: {{.Original.String}}
    func (_{{$contract.Type}} *{{$contract.Type}}Session) {{.Normalized.Name}}({{.InputArgs true}}) (*ethTypes.Transaction, error) {
        return _{{$contract.Type}}.Contract.{{.Normalized.Name}}(&_{{$contract.Type}}.TransactOpts, {{.InputArgs false}})
    }

    // {{.Normalized.Name}} is a paid mutator transaction binding the contract method 0x{{printf "%x" .Original.Id}}.
    //
    // Solidity: {{.Original.String}}
    func (_{{$contract.Type}} *{{$contract.Type}}TransactorSession) {{.Normalized.Name}}({{.InputArgs true}}) (*ethTypes.Transaction, error) {
        return _{{$contract.Type}}.Contract.{{.Normalized.Name}}(&_{{$contract.Type}}.TransactOpts, {{.InputArgs false}})
    }
{{end}}{{end}}